vector<vector<int> > Solution::diagonal(vector<vector<int> > &A) {
    int n=A.size();;
    vector<vector<int> > b;
    
     for (int i = 0; i < 2 * n - 1; ++i) {
       cout<<"[";
    	int z = i < n ? 0 : i - n + 1;
    	for (int j = z; j <= i - z; ++j) {
    	  cout<<A[j][i - j]<<" ";
    	           
    	}
    	cout<<"]"<<" ";
     }
     return b;

}



ANOTHER SOLUTION 



vector<vector<int> > Solution::diagonal(vector<vector<int> > &A) 
{    vector<vector<int>> result;
    vector<int> diagonal;
    
    int n = A.size();
    if(n == 0)
        return result;
    for(int d = 0; d <= 2*(n-1); d++) {
       for(int i = 0; i <= d; i++) {
           int j = d - i;
           //continue if i or j exceeds their bounds
           if(i >= n || j >= n)
                continue;
           diagonal.push_back(A[i][j]);
       }
       result.push_back(diagonal);
       diagonal.clear();
   }
   return result;
}
