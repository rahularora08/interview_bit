int Solution::maxArr(vector<int> &A) {
   int max1 = INT_MIN, max2 = INT_MIN, max3 = INT_MIN, max4 = INT_MIN;
    //assert(!A.empty());
    int ans = INT_MIN;
    int size = A.size();
    for (int i = 0; i<size; ++i)
    {
        max1 = max(max1, A[i] + i);
        max2 = max(max2, -A[i] + i);
        max3 = max(max3, A[i] - i);
        max4 = max(max4, -A[i] - i);
    }
    for (int i = 0; i<size; ++i)
    {
        ans = max(ans, max1 - A[i] - i);
        ans = max(ans, max2 + A[i] - i);
        ans = max(ans, max3 - A[i] + i);
        ans = max(ans, max4 + A[i] + i);
    }
    return ans;
}



ANOTHER POSSIBLE SOLUTION 


int Solution::maxArr(vector<int> &A) {
    int max1=INT_MIN,min1=INT_MAX,max2=INT_MIN,min2=INT_MAX;
    for(int i=0;i<A.size();i++)
    {
        int sum1=A[i]+i;
        if(sum1>max1)
         max1=sum1;
        if(sum1<min1)
         min1=sum1;
        int sum2=A[i]-i;
        if(sum2>max2)
         max2=sum2;
        if(sum2<min2)
         min2=sum2;
    }
    return max(max1-min1,max2-min2);
}
